#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcHaack.ControllerInspector {
    using System;


#line 2 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"


#line default
#line hidden

#line 3 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"


#line default
#line hidden

#line 4 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"


#line default
#line hidden

    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.1.0.0")]
    internal partial class ControllerDetails : ControllerDetailsBase {
#line hidden

#line 5 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"

        public dynamic Model { get; set; }


#line default
#line hidden

        public override void Execute() {


            WriteLiteral("\r\n");





            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title>");



#line 13 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            Write(Model.ControllerName);


#line default
#line hidden
            WriteLiteral(" Details - Controller Inspector</title>\r\n    <style>\r\n        body {\r\n           " +
            " margin: 0;\r\n            padding: 0;\r\n            font-size: 0.9em;\r\n           " +
            " font-family: calibri, verdana, sans-serif;\r\n            color: #232323;\r\n      " +
            "      background-color: #fff;\r\n        }\r\n        \r\n        h1 {\r\n            ma" +
            "rgin: 0;\r\n            padding: 8px 0 4px 8px;\r\n            color: #fff; \r\n      " +
            "      font-size: 2em; \r\n            background-color: #036; \r\n            width:" +
            " 100%; \r\n            font-weight: normal;\r\n        }\r\n        \r\n        h1 em {\r" +
            "\n            font-size: .7em;\r\n        }\r\n        \r\n        h2 {\r\n            fo" +
            "nt-size: 1.5em; \r\n            margin: 25px 0 10px 0; \r\n            border-top: 1" +
            "px solid #003366; \r\n            color: #003366; \r\n        }\r\n        \r\n        h" +
            "3 {\r\n            font-size: 1em;\r\n            margin: 8px 0 4px 0;\r\n        }\r\n " +
            "               \r\n        div#main {\r\n            padding: 8px 0 8px 12px; \r\n    " +
            "    }\r\n        \r\n        table {\r\n            font-family: calibri;\r\n           " +
            " font-size: 1em;\r\n            border-collapse: collapse;\r\n            margin-lef" +
            "t: 10px;\r\n        }\r\n        \r\n        table {\r\n            border: solid 1px;\r\n" +
            "        }\r\n                \r\n        table td, table th {\r\n            border: s" +
            "olid 1px #666;\r\n            padding: 4px 6px;\r\n            text-align: left;\r\n  " +
            "          vertical-align: top;\r\n        }\r\n        \r\n        ul {\r\n            m" +
            "argin: 0 0 0 4px;\r\n            padding: 0 0 0 8px;\r\n            margin-left: 20p" +
            "x;\r\n        }\r\n        \r\n        span.verbs {\r\n            font-size: 0.9em;\r\n  " +
            "          font-weight: normal;\r\n            font-style: italic;\r\n        }\r\n    " +
            "</style>\r\n</head>\r\n<body>\r\n    <header>\r\n        <h1>");



#line 87 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            Write(Model.ControllerName);


#line default
#line hidden
            WriteLiteral(" Controller (<em>");



#line 87 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            Write(Model.ControllerType.Namespace);


#line default
#line hidden
            WriteLiteral(@"</em>)</h1>
    </header>
    <div id=""main"">
        <p>The following filters are defined globally:</p>
        <table>
            <tr>
                <th>name</th>
                <th>namespace</th>
                <th>details</th>
            </tr>
");



#line 97 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            foreach (var filter in Model.GlobalFilters) {


#line default
#line hidden
                WriteLiteral("            <tr>\r\n                <td>");



#line 99 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(filter.Name);


#line default
#line hidden
                WriteLiteral("</td>\r\n                <td>");



#line 100 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(filter.Namespace);


#line default
#line hidden
                WriteLiteral("</td>\r\n                <td>\r\n                    <ul>\r\n");



#line 103 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                foreach (var property in filter.Properties) {


#line default
#line hidden
                    WriteLiteral("                        <li>");



#line 104 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(property.Name);


#line default
#line hidden
                    WriteLiteral(" = ");



#line 104 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(property.Value);


#line default
#line hidden
                    WriteLiteral("</li>\r\n");



#line 105 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                }


#line default
#line hidden
                WriteLiteral("                    </ul>\r\n                </td>\r\n            </tr>\r\n");



#line 109 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            }


#line default
#line hidden
            WriteLiteral("        </table>\r\n\r\n        <p>The following attributes are defined on this contr" +
            "oller:</p>\r\n        <table>\r\n            <tr>\r\n                <th>name</th>\r\n  " +
            "              <th>namespace</th>\r\n                <th>details</th>\r\n            " +
            "</tr>\r\n");



#line 119 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            foreach (var attribute in Model.ControllerType.Attributes) {


#line default
#line hidden
                WriteLiteral("            <tr>\r\n                <td>");



#line 121 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(attribute.Name);


#line default
#line hidden
                WriteLiteral("</td>\r\n                <td>");



#line 122 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(attribute.Namespace);


#line default
#line hidden
                WriteLiteral("</td>\r\n                <td>\r\n                    <ul>\r\n");



#line 125 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                foreach (var property in attribute.Properties) {


#line default
#line hidden
                    WriteLiteral("                        <li>");



#line 126 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(property.Name);


#line default
#line hidden
                    WriteLiteral(" = ");



#line 126 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(property.Value);


#line default
#line hidden
                    WriteLiteral("</li>\r\n");



#line 127 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                }


#line default
#line hidden
                WriteLiteral("                    </ul>\r\n                </td>\r\n            </tr>\r\n");



#line 131 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            }


#line default
#line hidden
            WriteLiteral("        </table>\r\n        \r\n        <p>This controller contains the following act" +
            "ions:</p>\r\n        \r\n        <ul>\r\n");



#line 137 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            foreach (var action in Model.Actions) {


#line default
#line hidden
                WriteLiteral("            <li><a href=\"#");



#line 138 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(action.Id);


#line default
#line hidden
                WriteLiteral("\">");



#line 138 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(action.Name);


#line default
#line hidden
                WriteLiteral(" <span class=\"verbs\">");



#line 138 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(String.Join(", ", action.Verbs));


#line default
#line hidden
                WriteLiteral("</span></a></li>\r\n");



#line 139 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            }


#line default
#line hidden
            WriteLiteral("        </ul>\r\n        \r\n");



#line 142 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            foreach (var action in Model.Actions) {


#line default
#line hidden
                WriteLiteral("            <h2 id=\"");



#line 143 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(action.Id);


#line default
#line hidden
                WriteLiteral("\">");



#line 143 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(action.Name);


#line default
#line hidden
                WriteLiteral(" <span class=\"verbs\">");



#line 143 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(String.Join(", ", action.Verbs));


#line default
#line hidden
                WriteLiteral("</span></h2>\r\n");



                WriteLiteral("            <h3>Return Value</h3>\r\n");



                WriteLiteral("            <p><code>");



#line 145 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(action.ReturnType);


#line default
#line hidden
                WriteLiteral("</code></p>\r\n");



#line 146 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"



#line default
#line hidden
                WriteLiteral("            <h3>Parameters</h3>\r\n");



                WriteLiteral("            <table>\r\n                <tr>\r\n                    <th>name</th>\r\n   " +
                "                 <th>type</th>\r\n                    <th>default</th>\r\n          " +
                "      </tr>\r\n");



#line 154 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                foreach (var parameter in action.Parameters) {


#line default
#line hidden
                    WriteLiteral("                <tr>\r\n                    <td>\r\n");



#line 157 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    if (parameter.IsComplexType) {


#line default
#line hidden
                        WriteLiteral("                            <a href=\"#");



#line 158 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                        Write(parameter.Type.FullName);


#line default
#line hidden
                        WriteLiteral("\">");



#line 158 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                        Write(parameter.Name);


#line default
#line hidden
                        WriteLiteral("</a>\r\n");



#line 159 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    }
                    else {


#line default
#line hidden

#line 161 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                        Write(parameter.Name);


#line default
#line hidden

#line 161 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"

                    }


#line default
#line hidden
                    WriteLiteral("                    </td>\r\n                    <td>");



#line 164 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(parameter.Type);


#line default
#line hidden
                    WriteLiteral("</td>\r\n                    <td>");



#line 165 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(parameter.DefaultValue);


#line default
#line hidden
                    WriteLiteral("</td>\r\n                </tr>\r\n");



#line 167 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                }


#line default
#line hidden
                WriteLiteral("            </table>\r\n");



#line 169 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"



#line default
#line hidden
                WriteLiteral("            <h3>Attributes</h3>\r\n");



                WriteLiteral("            <table>\r\n                <tr>\r\n                    <th>name</th>\r\n   " +
                "                 <th>namespace</th>\r\n                    <th>details</th>\r\n     " +
                "           </tr>\r\n");



#line 177 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                foreach (var attribute in action.Attributes) {


#line default
#line hidden
                    WriteLiteral("                <tr>\r\n                    <td>");



#line 179 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(attribute.Name);


#line default
#line hidden
                    WriteLiteral("</td>\r\n                    <td>");



#line 180 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(attribute.Type.Namespace);


#line default
#line hidden
                    WriteLiteral("</td>\r\n                    <td>\r\n                        <ul>\r\n");



#line 183 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    foreach (var property in attribute.Properties) {


#line default
#line hidden
                        WriteLiteral("                            <li>");



#line 184 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                        Write(property.Name);


#line default
#line hidden
                        WriteLiteral(" = ");



#line 184 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                        Write(property.Value);


#line default
#line hidden
                        WriteLiteral("</li>\r\n");



#line 185 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    }


#line default
#line hidden
                    WriteLiteral("                        </ul>\r\n                    </td>\r\n                </tr>\r\n" +
                    "");



#line 189 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                }


#line default
#line hidden
                WriteLiteral("            </table>\r\n");



#line 191 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            }


#line default
#line hidden
            WriteLiteral("\r\n        <hr />\r\n");



#line 194 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            foreach (var inputModelType in Model.InputModels) {


#line default
#line hidden
                WriteLiteral("            <h2 id=\"");



#line 195 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(inputModelType.FullName);


#line default
#line hidden
                WriteLiteral("\">Input Model: ");



#line 195 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                Write(inputModelType.Name);


#line default
#line hidden
                WriteLiteral("</h2>\r\n");



                WriteLiteral("            <table>\r\n                <tr>\r\n                    <th>Name</th>\r\n   " +
                "                 <th>Type</th>\r\n                </tr>\r\n");



#line 201 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                foreach (var property in inputModelType.Properties) {


#line default
#line hidden
                    WriteLiteral("                <tr>\r\n                    <td>");



#line 203 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(property.Name);


#line default
#line hidden
                    WriteLiteral("</td>\r\n                    <td><code>");



#line 204 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                    Write(property.PropertyType);


#line default
#line hidden
                    WriteLiteral("</code></td>\r\n                </tr>    \r\n");



#line 206 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
                }


#line default
#line hidden
                WriteLiteral("            </table>\r\n");



#line 208 "D:\dev\hg\codehaacks\src\MvcHaack.ControllerInspector\ControllerDetails.cshtml"
            }


#line default
#line hidden
            WriteLiteral("    </div>\r\n</body>\r\n</html>");


        }
        public string TransformText() {
            this.Execute();
            return this.GenerationEnvironment.ToString();
        }
    }
    #region Base class
    public class ControllerDetailsBase {
        private System.Text.StringBuilder _generatingEnvironment = new System.Text.StringBuilder();
        protected System.Text.StringBuilder GenerationEnvironment {
            get {
                return this._generatingEnvironment;
            }
            set {
                this._generatingEnvironment = value;
            }
        }
        public virtual void Execute() {
        }
        public void WriteLiteral(string textToAppend) {

            if (String.IsNullOrEmpty(textToAppend)) {
                return;
            }
            this.GenerationEnvironment.Append(textToAppend); ;
        }
        public void Write(object value) {

            string stringValue;
            if ((value == null)) {
                throw new global::System.ArgumentNullException("value");
            }
            System.Type t = value.GetType();
            System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
            if ((method == null)) {
                stringValue = value.ToString();
            }
            else {
                stringValue = ((string)(method.Invoke(value, new object[] { System.Globalization.CultureInfo.InvariantCulture })));
            }
            WriteLiteral(stringValue);

        }
    }
    #endregion
}
#pragma warning restore 1591
